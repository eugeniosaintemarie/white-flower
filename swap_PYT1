from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.graphics.barcode import code128
from reportlab.lib.units import mm

# Mapeo de los campos: Especifica qué índice corresponde a cada campo
mapeo_campos = {
    'CUIL': 0,            # Primer valor antes del primer punto y coma
    'Nombre': 1,          # Segundo valor entre el primer y segundo punto y coma
    'Apellido': 2,        # Tercer valor, y así sucesivamente
    'Direccion': 0,       # En la segunda línea
    'Ciudad': 1,
    'Email': 0,           # En la tercera línea
    'Telefono': 1
}

# Función para leer el archivo TXT y mapear los campos dinámicamente
def leer_informacion_clientes(archivo_txt, mapeo_campos):
    clientes = []
    with open(archivo_txt, 'r') as file:
        lines = file.readlines()
        for i in range(0, len(lines), 3):
            cliente = {}
            datos_linea_1 = lines[i].strip().split(';')
            datos_linea_2 = lines[i+1].strip().split(';')
            datos_linea_3 = lines[i+2].strip().split(';')
            
            # Asignar campos basados en el mapeo
            cliente['CUIL'] = datos_linea_1[mapeo_campos['CUIL']]
            cliente['Nombre'] = datos_linea_1[mapeo_campos['Nombre']]
            cliente['Apellido'] = datos_linea_1[mapeo_campos['Apellido']]
            cliente['Direccion'] = datos_linea_2[mapeo_campos['Direccion']]
            cliente['Ciudad'] = datos_linea_2[mapeo_campos['Ciudad']]
            cliente['Email'] = datos_linea_3[mapeo_campos['Email']]
            cliente['Telefono'] = datos_linea_3[mapeo_campos['Telefono']]
            
            clientes.append(cliente)
    return clientes

# Función para generar un PDF con la información de un cliente y agregar el código de barras
def generar_pdf(cliente):
    nombre_pdf = f"{cliente['CUIL']}.pdf"
    c = canvas.Canvas(nombre_pdf, pagesize=A4)
    
    # Escribir la información en el PDF
    c.drawString(100, 800, f"CUIL: {cliente['CUIL']}")
    c.drawString(100, 780, f"Nombre: {cliente['Nombre']}")
    c.drawString(100, 760, f"Apellido: {cliente['Apellido']}")
    c.drawString(100, 740, f"Dirección: {cliente['Direccion']}")
    c.drawString(100, 720, f"Ciudad: {cliente['Ciudad']}")
    c.drawString(100, 700, f"Email: {cliente['Email']}")
    c.drawString(100, 680, f"Teléfono: {cliente['Telefono']}")
    
    # Generar el código de barras basado en el número de CUIL
    barcode_value = cliente['CUIL']  # Puedes cambiar esto para otro número si es necesario
    barcode = code128.Code128(barcode_value, barHeight=20*mm, barWidth=0.5*mm)
    
    # Ubicar el código de barras en el PDF
    barcode.drawOn(c, 100, 600)  # Coordenadas (x, y) para el código de barras
    
    # Guardar el PDF
    c.save()

# Función principal para procesar todos los clientes y generar sus PDFs
def procesar_y_generar_pdfs(archivo_txt, mapeo_campos):
    clientes = leer_informacion_clientes(archivo_txt, mapeo_campos)
    
    for cliente in clientes:
        generar_pdf(cliente)

# Ejecutar el proceso con tu archivo TXT
archivo_txt = 'clientes.txt'
procesar_y_generar_pdfs(archivo_txt, mapeo_campos)
