Dim piezas(6) As Variant
Dim piezaActual As Variant
Dim siguientePieza As Variant
Dim x As Integer, y As Integer
Dim totalPiezas As Integer
Dim totalLineas As Integer
Dim timerActivo As Boolean

Sub ConfigurarPiezas()
    piezas(0) = Array(Array(1, 1, 1, 1)) ' Línea
    piezas(1) = Array(Array(1, 1), Array(1, 1)) ' Cuadrado
    piezas(2) = Array(Array(0, 1, 0), Array(1, 1, 1)) ' T
    piezas(3) = Array(Array(1, 1, 0), Array(0, 1, 1)) ' Z
    piezas(4) = Array(Array(0, 1, 1), Array(1, 1, 0)) ' S
    piezas(5) = Array(Array(1, 0, 0), Array(1, 1, 1)) ' L
    piezas(6) = Array(Array(0, 0, 1), Array(1, 1, 1)) ' L invertida
End Sub

Sub DibujarPieza(ByVal pieza As Variant, ByVal x As Integer, ByVal y As Integer, Optional limpiar As Boolean = False)
    Dim i As Integer, j As Integer
    Dim color As Long
    If limpiar Then
        color = RGB(255, 255, 255) ' Blanco para limpiar
    Else
        color = RGB(0, 255, 0) ' Verde
    End If
    For i = LBound(pieza) To UBound(pieza)
        For j = LBound(pieza(i)) To UBound(pieza(i))
            If pieza(i)(j) = 1 Then
                Cells(y + i, x + j).Interior.Color = color
            End If
        Next j
    Next i
End Sub

Sub DibujarProximaPieza()
    Dim i As Integer, j As Integer
    Dim inicioX As Integer: inicioX = 12 ' Columna L
    Dim inicioY As Integer: inicioY = 2 ' Fila 2

    ' Limpiar área
    For i = 0 To 3
        For j = 0 To 3
            Cells(inicioY + i, inicioX + j).Interior.Color = RGB(255, 255, 255) ' Blanco
        Next j
    Next i

    ' Dibujar la próxima pieza
    For i = LBound(siguientePieza) To UBound(siguientePieza)
        For j = LBound(siguientePieza(i)) To UBound(siguientePieza(i))
            If siguientePieza(i)(j) = 1 Then
                Cells(inicioY + i, inicioX + j).Interior.Color = RGB(0, 0, 255) ' Azul
            End If
        Next j
    Next i
End Sub

Function Colision(ByVal pieza As Variant, ByVal x As Integer, ByVal y As Integer) As Boolean
    Dim i As Integer, j As Integer
    For i = LBound(pieza) To UBound(pieza)
        For j = LBound(pieza(i)) To UBound(pieza(i))
            If pieza(i)(j) = 1 Then
                If y + i > 20 Or x + j < 1 Or x + j > 10 Or Cells(y + i, x + j).Interior.Color <> RGB(255, 255, 255) Then
                    Colision = True
                    Exit Function
                End If
            End If
        Next j
    Next i
    Colision = False
End Function

Sub MoverPieza(ByVal direccion As String)
    DibujarPieza piezaActual, x, y, True ' Limpiar la pieza actual
    Select Case direccion
        Case "izquierda"
            If Not Colision(piezaActual, x - 1, y) Then x = x - 1
        Case "derecha"
            If Not Colision(piezaActual, x + 1, y) And x + ObtenerAncho(piezaActual) <= 10 Then x = x + 1 ' Bloqueo a la derecha
        Case "abajo"
            If Not Colision(piezaActual, x, y + 1) Then
                y = y + 1
            Else
                ' Fijar pieza y generar nueva
                DibujarPieza piezaActual, x, y
                VerificarLineas
                GenerarNuevaPieza
            End If
    End Select
    DibujarPieza piezaActual, x, y ' Dibujar la pieza en la nueva posición
End Sub

Sub GenerarNuevaPieza()
    totalPiezas = totalPiezas + 1 ' Incrementar el contador de piezas
    piezaActual = siguientePieza
    siguientePieza = piezas(Int(Rnd * 7))
    x = 4: y = 1
    DibujarProximaPieza

    ' Comprobar si la nueva pieza colisiona inmediatamente (Game Over)
    If Colision(piezaActual, x, y) Then
        timerActivo = False
        MsgBox "Game Over"
        End
    End If
End Sub

Sub InicializarJuego()
    Dim i As Integer, j As Integer

    ' Configurar las piezas
    ConfigurarPiezas

    ' Limpiar el tablero
    For i = 1 To 20
        For j = 1 To 10
            Cells(i, j).Interior.Color = RGB(255, 255, 255) ' Blanco
        Next j
    Next i

    ' Inicializar el contador de piezas y líneas
    totalPiezas = 0
    totalLineas = 0
    ActualizarEstadisticas

    ' Generar la primera pieza
    Randomize
    siguientePieza = piezas(Int(Rnd * 7))
    GenerarNuevaPieza

    ' Dibujar la próxima pieza
    DibujarProximaPieza

    ' Configurar teclas
    Application.OnKey "{LEFT}", "MoverIzquierda"
    Application.OnKey "{RIGHT}", "MoverDerecha"
    Application.OnKey "{DOWN}", "MoverAbajo"
    Application.OnKey "{UP}", "Rotar"

    ' Iniciar el temporizador
    timerActivo = True
    Application.OnTime Now + TimeValue("00:00:01"), "ActualizarJuego"
End Sub

Sub ActualizarJuego()
    If timerActivo Then
        MoverPieza "abajo"
        Application.OnTime Now + TimeValue("00:00:01"), "ActualizarJuego"
    End If
End Sub

Sub MoverIzquierda()
    MoverPieza "izquierda"
End Sub

Sub MoverDerecha()
    MoverPieza "derecha"
End Sub

Sub MoverAbajo()
    MoverPieza "abajo"
End Sub

Sub Rotar()
    Dim piezaRotada As Variant
    piezaRotada = RotarPieza(piezaActual)

    ' Verificar colisión con el tablero
    If Not Colision(piezaRotada, x, y) Then
        ' Limpiar la pieza actual
        DibujarPieza piezaActual, x, y, True
        ' Actualizar a la pieza rotada
        piezaActual = piezaRotada
        ' Dibujar la pieza rotada
        DibujarPieza piezaActual, x, y
    End If
End Sub

Function RotarPieza(ByVal pieza As Variant) As Variant
    Dim i As Integer, j As Integer
    Dim filas As Integer, columnas As Integer
    filas = UBound(pieza) - LBound(pieza) + 1
    columnas = UBound(pieza(0)) - LBound(pieza(0)) + 1
    
    ' Crear una nueva matriz transpuesta
    Dim piezaRotada() As Variant
    ReDim piezaRotada(0 To columnas - 1, 0 To filas - 1)
    
    ' Rotar la pieza (transponer y luego invertir filas)
    For i = 0 To filas - 1
        For j = 0 To columnas - 1
            piezaRotada(j, filas - 1 - i) = pieza(i)(j)
        Next j
    Next i

    RotarPieza = piezaRotada
End Function

Sub VerificarLineas()
    Dim i As Integer, j As Integer, esCompleta As Boolean

    For i = 20 To 1 Step -1 ' Recorre de abajo hacia arriba
        esCompleta = True
        For j = 1 To 10 ' Comprueba todas las columnas
            If Cells(i, j).Interior.Color = RGB(255, 255, 255) Then
                esCompleta = False
                Exit For
            End If
        Next j

        ' Si la línea está completa, la borramos y movemos las demás
        If esCompleta Then
            For j = 1 To 10
                Cells(i, j).Interior.Color = RGB(255, 255, 255) ' Limpiar la línea
            Next j

            ' Mover todas las piezas encima una fila hacia abajo
            For k = i To 2 Step -1
                For j = 1 To 10
                    If Cells(k - 1, j).Interior.Color <> RGB(255, 255, 255) Then
                        Cells(k, j).Interior.Color = Cells(k - 1, j).Interior.Color
                        Cells(k - 1, j).Interior.Color = RGB(255, 255, 255)
                    End If
                Next j
            Next k

            ' Aumentar el contador de líneas
            totalLineas = totalLineas + 1
            ActualizarEstadisticas
        End If
    Next i
End Sub

Sub ActualizarEstadisticas()
    ' Muestra las estadísticas (líneas eliminadas)
    Range("K1").Value = "Líneas eliminadas: " & totalLineas
    Range("K1").Font.Color = RGB(255, 255, 255)
    Range("K1").Font.Size = 14
    Range("K1").Interior.Color = RGB(0, 0, 0)
End Sub
