Dim piezas(6) As Variant
Dim piezaActual As Variant
Dim siguientePieza As Variant
Dim x As Integer, y As Integer
Dim timerActivo As Boolean

Sub ConfigurarPiezas()
    piezas(0) = Array(Array(1, 1, 1, 1)) ' Línea
    piezas(1) = Array(Array(1, 1), Array(1, 1)) ' Cuadrado
    piezas(2) = Array(Array(0, 1, 0), Array(1, 1, 1)) ' T
    piezas(3) = Array(Array(1, 1, 0), Array(0, 1, 1)) ' Z
    piezas(4) = Array(Array(0, 1, 1), Array(1, 1, 0)) ' S
    piezas(5) = Array(Array(1, 0, 0), Array(1, 1, 1)) ' L
    piezas(6) = Array(Array(0, 0, 1), Array(1, 1, 1)) ' L invertida
End Sub

Sub DibujarPieza(ByVal pieza As Variant, ByVal x As Integer, ByVal y As Integer, Optional limpiar As Boolean = False)
    Dim i As Integer, j As Integer
    Dim color As Long
    If limpiar Then
        color = RGB(255, 255, 255) ' Blanco para limpiar
    Else
        color = RGB(0, 255, 0) ' Verde
    End If
    For i = LBound(pieza) To UBound(pieza)
        For j = LBound(pieza(i)) To UBound(pieza(i))
            If pieza(i)(j) = 1 Then
                Cells(y + i, x + j).Interior.Color = color
            End If
        Next j
    Next i
End Sub

Sub DibujarProximaPieza()
    Dim i As Integer, j As Integer
    Dim inicioX As Integer: inicioX = 12 ' Columna L
    Dim inicioY As Integer: inicioY = 2 ' Fila 2

    ' Limpiar área
    For i = 0 To 3
        For j = 0 To 3
            Cells(inicioY + i, inicioX + j).Interior.Color = RGB(255, 255, 255) ' Blanco
        Next j
    Next i

    ' Dibujar la próxima pieza
    For i = LBound(siguientePieza) To UBound(siguientePieza)
        For j = LBound(siguientePieza(i)) To UBound(siguientePieza(i))
            If siguientePieza(i)(j) = 1 Then
                Cells(inicioY + i, inicioX + j).Interior.Color = RGB(0, 0, 255) ' Azul
            End If
        Next j
    Next i
End Sub

Function Colision(ByVal pieza As Variant, ByVal x As Integer, ByVal y As Integer) As Boolean
    Dim i As Integer, j As Integer
    For i = LBound(pieza) To UBound(pieza)
        For j = LBound(pieza(i)) To UBound(pieza(i))
            If pieza(i)(j) = 1 Then
                If y + i > 20 Or x + j < 1 Or x + j > 10 Or Cells(y + i, x + j).Interior.Color <> RGB(255, 255, 255) Then
                    Colision = True
                    Exit Function
                End If
            End If
        Next j
    Next i
    Colision = False
End Function

Sub MoverPieza(ByVal direccion As String)
    DibujarPieza piezaActual, x, y, True ' Limpiar la pieza actual
    Select Case direccion
        Case "izquierda"
            If Not Colision(piezaActual, x - 1, y) Then x = x - 1
        Case "derecha"
            If Not Colision(piezaActual, x + 1, y) Then x = x + 1
        Case "abajo"
            If Not Colision(piezaActual, x, y + 1) Then y = y + 1 Else EndGame
    End Select
    DibujarPieza piezaActual, x, y ' Dibujar la pieza en la nueva posición
End Sub

Sub EndGame()
    timerActivo = False
    MsgBox "Game Over"
    End
End Sub

Sub IniciarJuego()
    Dim i As Integer
    Call ConfigurarPiezas
    Call LimpiarTablero
    Randomize

    ' Inicializar la primera pieza
    piezaActual = piezas(Int(Rnd * 7))
    siguientePieza = piezas(Int(Rnd * 7))
    x = 4: y = 1
    DibujarPieza piezaActual, x, y
    DibujarProximaPieza

    timerActivo = True
    Application.OnTime Now + TimeValue("00:00:01"), "BajarPieza"
End Sub

Sub BajarPieza()
    If timerActivo Then
        MoverPieza "abajo"
        Application.OnTime Now + TimeValue("00:00:01"), "BajarPieza"
    End If
End Sub

Sub LimpiarTablero()
    Dim i As Integer, j As Integer
    For i = 1 To 20
        For j = 1 To 10
            Cells(i, j).Interior.Color = RGB(255, 255, 255) ' Blanco
        Next j
    Next i
End Sub

Sub KeyDown()
    Dim keyCode As String
    keyCode = Application.InputBox("Ingresa una tecla (a = izquierda, d = derecha, s = abajo):", "Control", Type:=2)
    Select Case keyCode
        Case "a": MoverPieza "izquierda"
        Case "d": MoverPieza "derecha"
        Case "s": MoverPieza "abajo"
    End Select
End Sub
