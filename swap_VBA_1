Dim piezas(1 To 4, 1 To 4) As Boolean
Dim piezaActual(1 To 4, 1 To 4) As Boolean
Dim fila As Integer
Dim columna As Integer
Dim totalLineas As Integer

Sub IniciarJuego()
    ' Inicialización de variables
    fila = 1
    columna = 5
    totalLineas = 0
    ' Limpiar pantalla
    Cells.Clear
    ' Establecer bordes visibles
    With Range("A1:J20")
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
    End With
    ' Generar la pieza inicial
    GenerarPieza
    ' Mostrar estadísticas
    ActualizarEstadisticas
    ' Iniciar el ciclo de movimiento de la pieza
    LlamarMoverPieza
End Sub

Sub LlamarMoverPieza()
    ' Movimiento de la pieza cada 0.5 segundos
    On Error Resume Next
    Do
        MoverPieza
        VerificarLineas
        If Error.Number <> 0 Then Exit Do
        Application.Wait (Now + TimeValue("0:00:01"))
    Loop
    MsgBox "Game Over! Puntuación: " & totalLineas
End Sub

Sub GenerarPieza()
    ' Definir una pieza aleatoria
    Dim i As Integer, j As Integer
    Dim piezaTipo As Integer
    piezaTipo = Int(Rnd * 7) + 1 ' Aleatorio entre 1 y 7
    
    ' Dependiendo del tipo de pieza
    Select Case piezaTipo
        Case 1 ' I
            ' Asignar la pieza I
            For i = 1 To 4
                For j = 1 To 4
                    piezas(i, j) = False
                Next j
            Next i
            piezas(1, 1) = True
            piezas(1, 2) = True
            piezas(1, 3) = True
            piezas(1, 4) = True
        Case 2 ' O
            ' Asignar la pieza O
            For i = 1 To 4
                For j = 1 To 4
                    piezas(i, j) = False
                Next j
            Next i
            piezas(1, 1) = True
            piezas(1, 2) = True
            piezas(2, 1) = True
            piezas(2, 2) = True
        ' Agregar más piezas aquí (T, L, J, S, Z, etc.)
    End Select

    ' Asignar la pieza actual
    For i = 1 To 4
        For j = 1 To 4
            piezaActual(i, j) = piezas(i, j)
        Next j
    Next i
End Sub

Sub MoverPieza()
    ' Verificar si la pieza puede moverse
    Dim i As Integer, j As Integer
    Dim puedeMover As Boolean
    puedeMover = True

    ' Verificar si la pieza se mueve sin colisiones
    For i = 1 To 4
        For j = 1 To 4
            If piezaActual(i, j) Then
                If fila + i > 20 Or columna + j > 10 Or columna + j < 1 Then
                    puedeMover = False
                End If
            End If
        Next j
    Next i

    ' Si puede moverse, moverla
    If puedeMover Then
        For i = 1 To 4
            For j = 1 To 4
                If piezaActual(i, j) Then
                    Cells(fila + i - 1, columna + j - 1).Interior.Color = RGB(255, 255, 255)
                End If
            Next j
        Next i

        ' Mover pieza
        fila = fila + 1
        For i = 1 To 4
            For j = 1 To 4
                If piezaActual(i, j) Then
                    Cells(fila + i - 1, columna + j - 1).Interior.Color = RGB(0, 255, 0)
                End If
            Next j
        Next i
    Else
        ' Si la pieza no puede moverse, generar una nueva
        GenerarPieza
        fila = 1
        columna = 5
    End If
End Sub

Sub VerificarLineas()
    Dim i As Integer, j As Integer
    Dim esCompleta As Boolean

    ' Verificar si alguna línea está completa
    For i = 1 To 20
        esCompleta = True
        For j = 1 To 10
            If Cells(i, j).Interior.Color = RGB(255, 255, 255) Then
                esCompleta = False
                Exit For
            End If
        Next j

        ' Si la línea está completa, la borramos y movemos las demás
        If esCompleta Then
            For j = 1 To 10
                Cells(i, j).Interior.Color = RGB(255, 255, 255) ' Limpiar la línea
            Next j

            ' Mover todas las piezas encima una fila hacia abajo
            For k = i To 2 Step -1
                For j = 1 To 10
                    If Cells(k - 1, j).Interior.Color <> RGB(255, 255, 255) Then
                        Cells(k, j).Interior.Color = Cells(k - 1, j).Interior.Color
                        Cells(k - 1, j).Interior.Color = RGB(255, 255, 255)
                    End If
                Next j
            Next k

            ' Aumentar el contador de líneas
            totalLineas = totalLineas + 1
            ActualizarEstadisticas
        End If
    Next i
End Sub

Sub ActualizarEstadisticas()
    ' Muestra las estadísticas (líneas eliminadas)
    Range("K1").Value = "Líneas eliminadas: " & totalLineas
    Range("K1").Font.Color = RGB(255, 255, 255)
    Range("K1").Font.Size = 14
    Range("K1").Interior.Color = RGB(0, 0, 0)
End Sub

Sub Rotar()
    ' Rotar la pieza actual
    Dim nuevaPieza(1 To 4, 1 To 4) As Boolean
    Dim i As Integer, j As Integer

    ' Rotar la pieza 90 grados (transposición)
    For i = 1 To 4
        For j = 1 To 4
            nuevaPieza(i, j) = piezaActual(4 - j + 1, i)
        Next j
    Next i

    ' Verificar si la pieza rota colisiona
    If PuedeMoverPieza(nuevaPieza) Then
        piezaActual = nuevaPieza
        MoverPieza
    End If
End Sub

Function PuedeMoverPieza(piezaAcomprobar() As Boolean) As Boolean
    ' Verifica si la nueva pieza puede moverse
    Dim i As Integer, j As Integer
    Dim puedeMover As Boolean
    puedeMover = True

    ' Verificar si la pieza se mueve sin colisiones
    For i = 1 To 4
        For j = 1 To 4
            If piezaAcomprobar(i, j) Then
                If fila + i > 20 Or columna + j > 10 Or columna + j < 1 Then
                    puedeMover = False
                End If
            End If
        Next j
    Next i

    PuedeMoverPieza = puedeMover
End Function
